// 执行方式 gradlew.bat -q -b buildJar.gradle makeJar
// 执行方式 gradlew.bat -q -b buildJar.gradle execJar
// java -jar jspider/build/sdk/jar/spider.jar

def desSdkDir = 'jspider/build/sdk/'

def jarInclude = new File('jspider/libs').list()

task cleanJar(type: Delete) {
    delete desSdkDir + 'jar'
}

task makeJarAll(type: Jar) {
    doFirst {
        println 'start makeJarAll.'
    }

    def src = []
    def file = new File('jspider/build/classes/java/main')
    src.add(file)

    for (int i = 0; i < jarInclude.size(); i++) {
        from project.zipTree('jspider/libs/' + jarInclude[i])
    }

    // set.
    archiveName = 'spiderAll.jar'
    from src
    destinationDir = new File(desSdkDir, 'jar')
    setVersion version

    manifest {
        attributes 'Main-class': 'com.hy.jspider.Main'
    }
}

// only run on linux.
task makeJarSimple(type: Jar) {
    doFirst {
        println 'start makeJarSimple.'
    }

    def src = []
    def file = new File('jspider/build/classes/java/main')
    src.add(file)

    // set.
    archiveName = 'spiderSimple.jar'
    from src
    destinationDir = new File(desSdkDir, 'jar')
    setVersion version

    manifest {
        attributes 'Main-class': 'com.hy.jspider.Main'
        attributes 'Class-Path': '/home/hy/Program/libs/spiderlibrary.jar'
    }
}

// 生成Jar包。
task makeJar(dependsOn: [cleanJar, makeJarSimple, makeJarAll], type: Jar) {
}

// 多个依赖打成一个Jar包。
task makeJarDependency(type: Jar) {
    doFirst {
        println 'start makeJarDependency.'
    }

    for (int i = 0; i < jarInclude.size(); i++) {
        from project.zipTree('jspider/libs/' + jarInclude[i])
    }

    // set.
    archiveName = 'spiderlibrary.jar'
    destinationDir = new File(desSdkDir, 'lib')
    setVersion version
}

